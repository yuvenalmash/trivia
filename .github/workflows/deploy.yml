# This file is used to deploy the Django Trivia App to ec2 instance.
# The built image is pushed to S3 bucket and the ec2 instance pulls the image from the S3 bucket and runs the container.
name: CI/CD Pipeline for Django Trivia App

on:
  push:
    branches:
      - ci-cd

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Buld docker image
        run: |
          docker compose build trivia

      - name: Zip and upload image to S3
        run: |
          docker save trivia-app:latest | gzip > trivia-app.tar.gz
          aws s3 cp trivia-app.tar.gz s3://${{ secrets.S3_BUCKET_NAME }}/trivia-app/trivia-app.tar.gz

  deploy:
    name: Deploy Docker Image to EC2
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH for EC2
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/ec2_key.pem
          chmod 600 ~/.ssh/ec2_key.pem

      - name: Copy files to EC2
        run: |
          scp -i ~/.ssh/ec2_key.pem docker-compose.yml ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/docker-compose.yml

      - name: Deploy on EC2
        run: |
          ssh -i ~/.ssh/ec2_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          cd /home/${{ secrets.EC2_USER }}
          wget https://${{ secrets.S3_BUCKET_NAME }}.s3.amazonaws.com/trivia-app/trivia-app.tar.gz
          gunzip -c trivia-app.tar.gz | docker load
          # ensure docker compose is installed
          if ! command -v docker-compose &> /dev/null
          then
              sudo dnf install python3-pip -y
              pip3 install --user docker-compose
          fi
          docker-compose up -d
          EOF
